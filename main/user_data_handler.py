import os
from telegram.ext import ContextTypes
from telegram import Update
from telegram import InlineKeyboardButton, InlineKeyboardMarkup


selected_data = []


async def data_controller(selected_data: str, chat_id: int, context, update):
    care_image_path = os.path.join(os.path.dirname(__file__), "media", "GC_05700.jpeg")
    how_much_image_path = os.path.join(os.path.dirname(__file__), "media", "pricing.png")
    how_to_image_path = os.path.join(os.path.dirname(__file__), "media", "maxresdefault.jpg")

    info_cost_tattoo_image1 = os.path.join(os.path.dirname(__file__), "media/FAQ/FAQ - pricing", "length.jpg")
    info_cost_tattoo_image2 = os.path.join(os.path.dirname(__file__), "media/FAQ/FAQ - pricing", "details.jpg")
    info_cost_tattoo_image3 = os.path.join(os.path.dirname(__file__), "media/FAQ/FAQ - pricing", "body.jpg")
    info_cost_tattoo_image4 = os.path.join(os.path.dirname(__file__), "media/FAQ/FAQ - pricing", "color.jpg")
    info_cost_tattoo_image5 = os.path.join(os.path.dirname(__file__), "media/FAQ/FAQ - pricing", "pain.jpg")

    how_care_doc_path_ru = os.path.join(os.path.dirname(__file__), "media/FAQ", "How_to_care(RU).pdf")
    how_care_doc_path_eng = os.path.join(os.path.dirname(__file__), "media/FAQ", "How_to_care(ENG).pdf")
    how_care_doc_path_pl = os.path.join(os.path.dirname(__file__), "media/FAQ", "How_to_care(PL).pdf")

    how_prepare_doc_path_ru = os.path.join(os.path.dirname(__file__), "media/FAQ", "How_to_care(RU).pdf")
    how_prepare_doc_path_eng = os.path.join(os.path.dirname(__file__), "media/FAQ", "How_to_care(ENG).pdf")
    how_prepare_doc_path_pl = os.path.join(os.path.dirname(__file__), "media/FAQ", "How_to_care(PL).pdf")

    if 'care' in selected_data:
        del selected_data[1]
        if "ENG" in selected_data:
            photo_path = care_image_path
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_document(chat_id=chat_id, document=open(how_care_doc_path_eng, 'rb'))

        elif "RU" in selected_data:
            photo_path = care_image_path
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_document(chat_id=chat_id, document=open(how_care_doc_path_ru, 'rb'))

        elif "PL" in selected_data:
            photo_path = care_image_path
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_document(chat_id=chat_id, document=open(how_care_doc_path_pl, 'rb'))

    elif 'how_to' in selected_data:
        del selected_data[1]
        if "ENG" in selected_data:
            photo_path = how_to_image_path
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_document(chat_id=chat_id, document=open(how_prepare_doc_path_eng, 'rb'))

        elif "RU" in selected_data:
            photo_path = how_to_image_path
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_document(chat_id=chat_id, document=open(how_prepare_doc_path_ru, 'rb'))

        elif "PL" in selected_data:
            photo_path = how_to_image_path
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_document(chat_id=chat_id, document=open(how_prepare_doc_path_pl, 'rb'))

    elif 'how_much' in selected_data:
        del selected_data[1]
        if "ENG" in selected_data:
            await context.bot.send_photo(chat_id=chat_id, photo=open(how_much_image_path, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='Pricing factors:')
            await context.bot.send_message(chat_id=chat_id, text='1) Size of tattoo')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image1, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='2) Level of detail and complexity')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image2, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='3) Location (where must be tattoo)')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image3, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='4) Use of color ')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image4, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='5) Pain threshold (quantity of sessions)')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image5, 'rb'))
            await context.bot.send_message(chat_id=chat_id,
                                           text="For a more detailed assessment of your idea, write to the tattoo artist:")

            instagram_keyboard = [InlineKeyboardButton("Instagram", url='https://www.instagram.com/alexandr_darksoul/')]
            linkedin_keyboard = [InlineKeyboardButton('Facebook', url='https://www.facebook.com/AlexINKINK/')]
            keyboard = InlineKeyboardMarkup([instagram_keyboard, linkedin_keyboard])

            if 'RU' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è —á—Ç–æ –±—ã –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–πüî•",
                                               reply_markup=keyboard)

            elif 'ENG' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•Subscribe to stay informed about all eventsüî•",
                                               reply_markup=keyboard)

            elif 'PL' in selected_data:
                await context.bot.send_message(chat_id=chat_id,
                                               text="üî•Subskrybuj, aby byƒá na bie≈ºƒÖco ze wszystkimi wydarzeniamiüî•",
                                               reply_markup=keyboard)

        elif "RU" in selected_data:
            await context.bot.send_photo(chat_id=chat_id, photo=open(how_much_image_path, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã:')
            await context.bot.send_message(chat_id=chat_id, text='1) –†–∞–∑–º–µ—Ä')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image1, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='2) –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image2, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='3) –ú–µ—Å—Ç–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–∞—Ç—É')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image3, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='4) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–Ω—ã—Ö –∫—Ä–∞—Å–æ–∫')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image4, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='5) –ë–æ–ª–µ–≤–æ–π –ø–æ—Ä–æ–≥ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∞–Ω—Å–æ–≤)')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image5, 'rb'))
            await context.bot.send_message(chat_id=chat_id,
                                           text='–î–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–æ–π –≤–∞—à–µ–π –∏–¥–µ–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–∞—Ç—É –º–∞—Å—Ç–µ—Ä—É:')

            instagram_keyboard = [InlineKeyboardButton("Instagram", url='https://www.instagram.com/alexandr_darksoul/')]
            linkedin_keyboard = [InlineKeyboardButton('Facebook', url='https://www.facebook.com/AlexINKINK/')]
            keyboard = InlineKeyboardMarkup([instagram_keyboard, linkedin_keyboard])

            if 'RU' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è —á—Ç–æ –±—ã –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–πüî•",
                                               reply_markup=keyboard)

            elif 'ENG' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•Subscribe to stay informed about all eventsüî•",
                                               reply_markup=keyboard)

            elif 'PL' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•Subskrybuj, aby byƒá na bie≈ºƒÖco ze wszystkimi wydarzeniamiüî•",
                                               reply_markup=keyboard)

        elif "PL" in selected_data:
            await context.bot.send_photo(chat_id=chat_id, photo=open(how_much_image_path, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='Kszta≈Çtowanie ceny:')
            await context.bot.send_message(chat_id=chat_id, text='1) Rozmiar')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image1, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='2) Stopie≈Ñ szczeg√≥≈Çowo≈õci i z≈Ço≈ºono≈õƒá')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image2, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='3) Lokalizacja, w kt√≥rej us≈Çuga jest ≈õwiadczona')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image3, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='4) U≈ºycie kolor√≥w, je≈õli ma zastosowanie')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image4, 'rb'))
            await context.bot.send_message(chat_id=chat_id, text='5) Pr√≥g b√≥lu (Liczba sesji)')
            await context.bot.send_photo(chat_id=chat_id, photo=open(info_cost_tattoo_image5, 'rb'))
            await context.bot.send_message(chat_id=chat_id,
                                           text="Dla bardziej szczeg√≥≈Çowej oceny swojego pomys≈Çu, napisz do tatua≈ºysty:")

            instagram_keyboard = [InlineKeyboardButton("Instagram", url='https://www.instagram.com/alexandr_darksoul/')]
            linkedin_keyboard = [InlineKeyboardButton('Facebook', url='https://www.facebook.com/AlexINKINK/')]
            keyboard = InlineKeyboardMarkup([instagram_keyboard, linkedin_keyboard])

            if 'RU' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è —á—Ç–æ –±—ã –±—ã—Ç—å –≤–∫—É—Ä—Å–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–πüî•",
                                               reply_markup=keyboard)

            elif 'ENG' in selected_data:
                await context.bot.send_message(chat_id=chat_id, text="üî•Subscribe to stay informed about all eventsüî•",
                                               reply_markup=keyboard)

            elif 'PL' in selected_data:
                await context.bot.send_message(chat_id=chat_id,
                                               text="üî•Subskrybuj, aby byƒá na bie≈ºƒÖco ze wszystkimi wydarzeniamiüî•",
                                               reply_markup=keyboard)

    else:
        if "ENG" in selected_data:
            photo_path = os.path.join(os.path.dirname(__file__), "media", "brat.jpg")
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_message(
                chat_id=chat_id,
                text=''' Hi! üëã
                I am DarkSoultattooBot ü§ñ
                A virtual assistant of tattoo artist AleksandrDarkSoul.
                Go to the menu and check out the information we have prepared for you.üî•
                Have a tattoo-filled day!üòâ''')

        elif "RU" in selected_data:
            photo_path = os.path.join(os.path.dirname(__file__), "media", "brat.jpg")
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_message(
                chat_id=chat_id,
                text='''–ü—Ä–∏–≤–µ—Ç! üëã
                –ú–µ–Ω—è –∑–æ–≤—É—Ç DarkSoultattooBot ü§ñ
                –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Ç–∞—Ç—É-–º–∞—Å—Ç–µ—Ä–∞ AleksandrDarkSoul.
                –ü–µ—Ä–µ–π–¥–∏ –≤ –º–µ–Ω—é –∏ –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é –º—ã –¥–ª—è —Ç–µ–±—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏.üî•
                –ñ–µ–ª–∞—é —Ç–∞—Ç—É—à–Ω–æ–≥–æ –¥–Ω—è!üòâ''')

        elif "PL" in selected_data:
            photo_path = os.path.join(os.path.dirname(__file__), "media", "brat.jpg")
            await context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'))
            await context.bot.send_message(
                chat_id=chat_id,
                text='''Cze≈õƒá! üëã
                Jestem DarkSoultattooBot ü§ñ
                Jestem wirtualnym asystentem tatua≈ºysty AleksandrDarkSoul.
                Przejd≈∫ do menu i zapoznaj siƒô z informacjƒÖ, kt√≥rƒÖ dla Ciebie przygotowali≈õmy.üî•
                ≈ªyczƒô Ci tatuowanego dnia!üòâ ''')


async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global selected_data
    query = update.callback_query
    new_element = query.data
    chat_id = query.message.chat_id
    if new_element == 'send_document':
        selected_data.append('send_document')

    if new_element == "ENG":
        if "PL" in selected_data:
            selected_data.remove('PL')
        elif 'RU' in selected_data:
            selected_data.remove('RU')
        elif "ENG" in selected_data:
            selected_data.remove('ENG')
        selected_data.append('ENG')
    elif new_element == "PL":
        if "ENG" in selected_data:
            selected_data.remove('ENG')
        elif 'RU' in selected_data:
            selected_data.remove('RU')
        elif 'PL' in selected_data:
            selected_data.remove('PL')
        selected_data.append("PL")
    elif new_element == "RU":
        if "ENG" in selected_data:
            selected_data.remove('ENG')
        elif 'PL' in selected_data:
            selected_data.remove('PL')
        elif 'RU' in selected_data:
            selected_data.remove('RU')
        selected_data.append("RU")

    if new_element == "care":
        if "how_to" in selected_data:
            selected_data.remove('how_to')
        elif 'how_much' in selected_data:
            selected_data.remove('how_much')
        elif 'care' in selected_data:
            selected_data.remove('care')
        selected_data.append("care")
    elif new_element == "how_to":
        if "care" in selected_data:
            selected_data.remove('care')
        elif 'how_much' in selected_data:
            selected_data.remove('how_much')
        elif "how_to" in selected_data:
            selected_data.remove('how_to')
        selected_data.append("how_to")
    elif new_element == "how_much":
        if "care" in selected_data:
            selected_data.remove('care')
        elif 'how_to' in selected_data:
            selected_data.remove('how_to')
        elif 'how_much' in selected_data:
            selected_data.remove('how_much')
        selected_data.append("how_much")
    print(selected_data)

    await data_controller(selected_data, chat_id, context, update)

if __name__ == '__main__':
    button_click()
